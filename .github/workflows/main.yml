# This is a basic workflow to help you get started with Actions

name: CI Windows EXE Build

# Controls when the action will run. 
on:
  push:
    tags:
      - v*


  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - uses: fregante/setup-git-user@v1
      
      # Set branch name
      - name: Set branch name
        run: |
          $branchName = $Env:GITHUB_REF -replace "refs/heads/", ""
          echo $branchName

      # Install all required dependencies and pyinstaller to package code
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install pyinstaller

      # Package script and move to root folder
      - name: Package Script to EXE
        run: |
          rm covid-vaccine-slot-booking.exe -ErrorAction Ignore
          cd src
          pyinstaller --onefile covid-vaccine-slot-booking.py
          cd ..
          move src\dist\covid-vaccine-slot-booking.exe .
      
      # Push EXE file to release
      - name: Upload windows executable to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: covid-vaccine-slot-booking.exe
          tag: ${{ github.ref }}

      # Push APK to release.
      - name: Upload android package to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: CoWinOtpRetreiver.apk
          tag: ${{ github.ref }}

  docker-build:
    runs-on: ubuntu-latest
    name: Build and push to docker
    steps:
      - uses: actions/checkout@v2

      - name: Run Docker
        env:
          TAG_NAME: ${{ github.ref }}
          GIT_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
          GIT_USERNAME: ${{ github.repository }}
        run: |
          version=$(echo ${TAG_NAME/refs\/tags\/v/})
          echo $GIT_PASSWORD | docker login -u $GIT_USERNAME --password-stdin https://docker.pkg.github.com
          docker build --no-cache -t cowin:latest -f Dockerfile .
          docker tag cowin:latest docker.pkg.github.com/bombardier-gif/covid-vaccine-booking/cowin:$version
          docker tag cowin:latest docker.pkg.github.com/bombardier-gif/covid-vaccine-booking/cowin:latest
          docker push docker.pkg.github.com/bombardier-gif/covid-vaccine-booking/cowin:$version
          docker push docker.pkg.github.com/bombardier-gif/covid-vaccine-booking/cowin:latest